{"version":3,"sources":["reducers/userReducer.js","components/NavBarComponent/NavBarComponent.jsx","components/AuthComponents/RegisterComponent.jsx","components/AuthComponents/LoginComponent.jsx","components/HomeComponent/PostCards.jsx","components/HomeComponent/HomeComponent.jsx","components/HomeComponent/PostDetail.jsx","components/HomeComponent/CreatePost.jsx","App.js","reportWebVitals.js","index.js"],"names":["reducer","state","action","type","payload","Navbar","history","useHistory","useContext","NavBarContext","navBarState","handleRoute","localStorage","clear","page","userData","push","className","to","onClick","style","textDecoration","color","name","toUpperCase","marginLeft","Register","callBack","useState","email","emailState","password","passwordState","nameState","confirmPassword","confirmPasswordState","loading","setLoading","handleRegister","a","fetch","method","headers","body","JSON","stringify","res","json","data","status","M","toast","html","classes","message","position","bottom","right","id","textAlign","marginTop","onSubmit","e","preventDefault","requried","placeholder","value","onChange","target","Login","UserContext","dispatch","handleLogin","setItem","token","user","required","PostCard","postItem","likes","length","likeCount","setCount","includes","_id","liked","setLikedState","comments","commentList","setCommentList","comment","setComment","likePost","Authorization","getItem","postId","unlikePost","postComment","text","console","log","newList","concat","width","fontSize","fontWeight","postedBy","title","pathname","content","display","map","i","padding","Home","postList","setPostList","currentPage","setCurrentPage","postsPerPage","useEffect","getPosts","paginate","selected","indexofLastPost","indexofFirstPost","slice","post","pageCount","Math","ceil","previousLabel","nextLabel","onPageChange","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","PostDetail","useLocation","goBack","CreatePost","setTitle","setContent","createPost","rows","cols","createContext","Routing","parse","path","App","useReducer","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3144bb0d.chunk.js","sourcesContent":["export const reducer = (state, action) => {\n    if (action.type === \"USER\") {\n        return action.payload\n    }\n    if (action.type === \"CLEAR\") {\n        return null\n    }\n    return state\n}","import React, { useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { NavBarContext } from \"../../App\";\n\nconst Navbar = () => {\n    const history = useHistory()\n    const [type, navBarState] = useContext(NavBarContext);\n\n    function handleRoute(type) {\n\n        if (type === 'login') {\n            localStorage.clear();\n            navBarState({ page: 'login', userData: null });\n            history.push('/login')\n        }\n        else if (type === 'createPost') {\n            history.push('/createPost')\n        }\n    }\n\n    if (type.page === 'login') {\n        return (\n\n            <nav className=\"nav__bar\">\n                <div className=\"nav__heading\">\n                    <h2>Welcome to Twimbit blogs</h2>\n                </div>\n                <div className=\"nav__link\">\n                    <Link to='/register' onClick={() => navBarState({ page: 'register', userData: null })} style={{ textDecoration: 'none', color: 'white' }}>\n                        <h4>Don't have an account...Register here!</h4>\n                    </Link>\n                </div>\n            </nav>\n        );\n    } else if (type.page === 'register') {\n        return (\n            <nav className=\"nav__bar\">\n                <div className=\"nav__heading\">\n                    <h2>Welcome to Twimbit blogs</h2>\n                </div>\n                <div className=\"nav__link\">\n                    <Link to='/login' onClick={() => navBarState({ page: 'login', userData: null })} style={{ textDecoration: 'none', color: 'white' }}>\n                        <h4>Login!</h4>\n                    </Link>\n                </div>\n            </nav>\n        );\n    } else if (type.page === \"logedIn\") {\n        return (\n            <nav className=\"nav__bar\">\n                <div className=\"nav__heading\">\n                    <h2>Hi {type.userData.name.toUpperCase()}</h2>\n                </div>\n                <div className=\"nav__link\">\n                    <button className=\"btn #c62828 blue darken-3\" onClick={() => { handleRoute('createPost') }}>Create  Post</button>\n                    <button className=\"btn #c62828 red darken-3\" style={{ marginLeft: '1rem' }} onClick={() => { handleRoute('login') }}>Logout</button>\n                </div>\n            </nav>\n        );\n\n    }\n}\n\nexport default Navbar;","import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport M from \"materialize-css\";\n\n\n\nconst Register = ({ callBack }) => {\n    const history = useHistory();\n    const [email, emailState] = useState('');\n    const [password, passwordState] = useState('');\n    const [name, nameState] = useState('');\n    const [confirmPassword, confirmPasswordState] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const handleRegister = async () => {\n\n        if (password === confirmPassword) {\n            setLoading(true);\n            const res = await fetch(\"https://twimbit-api.herokuapp.com/api/auth/register\", {\n                method: \"post\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    name,\n                    password,\n                    email,\n                }),\n            });\n            const data = await res.json();\n            if (res.status === 201) {\n                callBack();\n                history.push('/login');\n                M.toast({ html: \"Login In to Continue\", classes: \"#c62828 red darken-3\" });\n            } else if (res.status === 500) {\n                M.toast({ html: data.message, classes: \"#c62828 red darken-3\" });\n                emailState('');\n                nameState('');\n                passwordState('');\n                confirmPasswordState('');\n                setLoading(false);\n            }\n        }\n        else {\n            return M.toast({\n                html: \"Passwords dont match\",\n                classes: \"#c62828 red darken-3\",\n            });\n        }\n\n\n    }\n\n\n\n    if (loading) {\n        return (\n            <div className=\"loader\" style={{\n                position: \"absolute\",\n                bottom: \"50%\",\n                right: \" 50%\"\n            }}>\n                <div className=\"preloader-wrapper small active\">\n                    <div className=\"spinner-layer spinner-green-only\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"container\" id=\"login__container\">\n            <div className=\"row\" style={{ textAlign: 'center', marginTop: \"8rem\" }}>\n                <h1>Welcome !!</h1>\n            </div>\n            <form onSubmit={(e) => { e.preventDefault(); handleRegister() }}>\n                <div className=\"row input__field\">\n                    <div className=\"input-field col s12 l6 offset-l3\" >\n                        <i className=\"material-icons prefix\">email</i>\n                        <input requried=\"true\" placeholder=\"Email\" id=\"icon_prefix\" type=\"email\" className=\"validate\" value={email} onChange={(e) => { emailState(e.target.value) }} />\n\n                    </div>\n                </div>\n                <div className=\"row input__field\">\n                    <div className=\"input-field col s12 l6 offset-l3\" >\n                        <i className=\"material-icons prefix\">accessibility</i>\n                        <input requried=\"true\" placeholder=\"Name\" id=\"icon_prefix1\" type=\"text\" className=\"validate\" value={name} onChange={(e) => { nameState(e.target.value) }} />\n\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field col col s12 l6 offset-l3\" >\n                        <i className=\"material-icons prefix\">account_circle</i>\n                        <input requried=\"true\" placeholder=\"Password\" id=\"icon_telephone\" type=\"password\" className=\"validate\" value={password} onChange={(e) => { passwordState(e.target.value) }} />\n\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field col col s12 l6 offset-l3\" >\n                        <i className=\"material-icons prefix\">check_circle</i>\n                        <input requried=\"true\" placeholder=\"Confrim Password\" id=\"icon_telephone1\" type=\"password\" className=\"validate\" value={confirmPassword} onChange={(e) => { confirmPasswordState(e.target.value) }} />\n\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col s6 offset-s3\" style={{ textAlign: 'center' }}>\n                        <input type='submit' value=\"Register\" className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\" onClick={() => handleRegister()} />\n                    </div>\n                </div>\n            </form>\n        </div>\n\n\n    );\n}\n\nexport default Register;","import React, { useState, useContext } from \"react\";\nimport { UserContext } from '../../App';\nimport { useHistory } from 'react-router-dom';\nimport M from \"materialize-css\";\n\n\nconst Login = ({ callBack }) => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(UserContext);\n  const [email, emailState] = useState('');\n  const [password, passwordState] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleLogin = async () => {\n    setLoading(true);\n    const res = await fetch(\"https://twimbit-api.herokuapp.com/api/auth/login\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        password,\n        email,\n      }),\n    });\n    const data = await res.json();\n    if (res.status === 200) {\n      localStorage.setItem('jwt', data.token)\n      localStorage.setItem('user', JSON.stringify(data.user))\n      dispatch({ type: \"USER\", payload: data.user })\n      callBack(data.user);\n      history.push('/');\n      M.toast({ html: \"Successfully Loged In\", classes: \"#c62828 red darken-3\" });\n    } else if (res.status === 500) {\n      M.toast({ html: data.message, classes: \"#c62828 red darken-3\" });\n      emailState('');\n      passwordState('');\n      setLoading(false);\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"loader\" style={{\n        position: \"absolute\",\n        bottom: \"50%\",\n        right: \" 50%\"\n      }}>\n        <div className=\"preloader-wrapper small active\">\n          <div className=\"spinner-layer spinner-green-only\">\n            <div className=\"circle-clipper left\">\n              <div className=\"circle\"></div>\n            </div>\n            <div className=\"gap-patch\">\n              <div className=\"circle\"></div>\n            </div>\n            <div className=\"circle-clipper right\">\n              <div className=\"circle\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"container\" id=\"login__container\">\n      <div className=\"row\" style={{ textAlign: 'center', marginTop: \"8rem\" }}>\n        <h1>Welcome !!</h1>\n      </div>\n      <form onSubmit={(e) => { e.preventDefault(); handleLogin() }}>\n        <div className=\"row input__field\">\n          <div className=\"input-field col s12 l6 offset-l3\" >\n            <i className=\"material-icons prefix\">email</i>\n            <input required=\"true\" placeholder=\"Email\" id=\"icon_prefix\" type=\"email\" className=\"validate\" value={email} onChange={(e) => { emailState(e.target.value) }} />\n\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field col col s12 l6 offset-l3\" >\n            <i className=\"material-icons prefix\">account_circle</i>\n            <input required=\"true\" placeholder=\"Password\" id=\"icon_telephone\" type=\"password\" className=\"validate\" value={password} onChange={(e) => { passwordState(e.target.value) }} />\n\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col s6 offset-s3\" style={{ textAlign: 'center' }}>\n            <input type=\"submit\" value=\"Login\" className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\" />\n          </div>\n        </div>\n\n      </form>\n    </div>\n\n\n  );\n}\n\nexport default Login;","import React, { useContext, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../../App\";\nimport M from \"materialize-css\";\n\n\nconst PostCard = ({ postItem }) => {\n\n    const { state, dispatch } = useContext(UserContext);\n    const [likeCount, setCount] = useState(postItem.likes.length);\n    const [liked, setLikedState] = useState(postItem.likes.includes(state._id));\n    const [commentList, setCommentList] = useState(postItem.comments);\n    const [comment, setComment] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n\n    const likePost = async () => {\n        setCount(likeCount + 1);\n        setLikedState(true);\n        const res = await fetch(\"https://twimbit-api.herokuapp.com/api/post/likePost\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n            body: JSON.stringify({\n                postId: postItem._id,\n            }),\n        });\n        if (res.status === 200) {\n\n        } else {\n            M.toast({ html: \"Some Error Occured\", classes: \"#c62828 red darken-3\" });\n        }\n\n    }\n\n    const unlikePost = async () => {\n        setCount(likeCount - 1);\n        setLikedState(false);\n        const res = await fetch(\"https://twimbit-api.herokuapp.com/api/post/unlikePost\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n            body: JSON.stringify({\n                postId: postItem._id,\n            }),\n        });\n\n        if (res.status === 200) {\n\n        } else {\n            M.toast({ html: \"Some Error Occured\", classes: \"#c62828 red darken-3\" });\n        }\n\n    }\n\n    const postComment = async () => {\n        setLoading(true);\n        setComment('');\n        const res = await fetch(\"https://twimbit-api.herokuapp.com/api/post/commentPost\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n            body: JSON.stringify({\n                postId: postItem._id,\n                text: comment,\n            }),\n        });\n        const data = await res.json();\n        if (res.status === 201) {\n            console.log(data);\n            const newList = commentList.concat(data);\n            console.log(newList);\n\n            setCommentList(newList);\n            setLoading(false);\n        } else {\n            M.toast({ html: \"Some Error Occured\", classes: \"#c62828 red darken-3\" });\n        }\n    }\n\n\n\n    return (\n        <div className=\"card grey darken-1\" style={{ width: \"100%\" }} key={postItem._id}>\n            <div className=\"card-content white-text\">\n                <span style={{ color: 'black', fontSize: \"2.5rem\", fontWeight: 'normal' }} className=\"card-title\">Posted By:- {postItem.postedBy.name.toUpperCase()}</span>\n                <div>\n                    <h2 style={{ color: 'white' }}>{postItem.title}</h2>\n                </div>\n                <Link to={{ pathname: \"/postDetails\", state: { postedBy: postItem.postedBy.name, title: postItem.title, content: postItem.content } }} style={{ color: \"#0818A8\" }}>Know More...</Link>\n\n                <div style={{ marginTop: \"1rem\", display: \"flex\" }} >\n                    {liked ?\n                        (<i className=\"material-icons\" onClick={() => { unlikePost() }}>thumb_up</i>)\n                        :\n                        (<i className=\"material-icons\" onClick={() => { likePost() }}>thumb_down</i>)\n                    }\n                    <span><h6>{likeCount} likes</h6></span>\n                </div>\n\n                <div>\n                    <h5 style={{ color: 'white' }}>Comments</h5>\n                </div>\n\n                {commentList.map((comment, i) => {\n                    return (<div key={i}>\n                        <h6 style={{ color: '#1F51FF' }}>{comment.postedBy.name.toUpperCase()}</h6>\n                        <p style={{ color: 'black', padding: '0px' }}> {comment.text}</p>\n                        <hr />\n                    </div>)\n                })}\n                {loading ? <div className=\"loader\" style={{ position: \"absolute\", bottom: \"50%\", right: \" 50%\" }}>\n                    <div className=\"preloader-wrapper small active\">\n                        <div className=\"spinner-layer spinner-green-only\">\n                            <div className=\"circle-clipper left\">\n                                <div className=\"circle\"></div>\n                            </div>\n                            <div className=\"gap-patch\">\n                                <div className=\"circle\"></div>\n                            </div>\n                            <div className=\"circle-clipper right\">\n                                <div className=\"circle\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div> : <div>\n                </div>}\n                <div style={{ marginTop: '2rem' }}>\n                    <form onSubmit={(e) => { e.preventDefault(); postComment() }}>\n                        <input type=\"text\" value={comment} onChange={(e) => { setComment(e.target.value) }} placeholder=\"Add a Comment\" />\n                        <input type=\"submit\" value=\"Comment\" className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\" />\n                    </form>\n                </div>\n            </div>\n\n        </div >\n    );\n}\n\nexport default PostCard;","import React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from '../../App';\nimport PostCard from './PostCards';\nimport ReactPaginate from \"react-paginate\";\n// import Pagination from '../PaginationComponent/PaginationComponent';\n\nlet start = 0;\n\nconst Home = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const [postList, setPostList] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(0);\n    const [postsPerPage] = useState(10);\n\n    useEffect(() => getPosts(), []);\n\n    const getPosts = async () => {\n        setLoading(true);\n        const res = await fetch(`https://twimbit-api.herokuapp.com/api/post/allPosts?start=${start}`, {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n        });\n\n        const data = await res.json();\n        if (res.status === 201) {\n            setPostList(data);\n            setLoading(false);\n\n        } else {\n            setPostList([]);\n        }\n    }\n\n    const paginate = async ({ selected }) => {\n        setCurrentPage(selected);\n        // start += 10;\n        // setLoading(true);\n        // console.log(localStorage.getItem(\"jwt\"));\n        // const res = await fetch(`https://twimbit-api.herokuapp.com/api/post/allPosts?start=${start}`, {\n        //     headers: {\n        //         Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        //     },\n        // });\n\n        // const data = await res.json();\n        // if (res.status === 201) {\n        //     setPostList(postList.concat(data.posts));\n        //     setLoading(false);\n\n        // } else {\n        //     setPostList([]);\n        // }\n\n\n    }\n\n\n\n    if (loading) {\n        return (\n            <div className=\"loader\" style={{\n                position: \"absolute\",\n                bottom: \"50%\",\n                right: \" 50%\"\n            }}>\n                <div className=\"preloader-wrapper small active\">\n                    <div className=\"spinner-layer spinner-green-only\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const indexofLastPost = (currentPage + 1) * postsPerPage;\n    const indexofFirstPost = indexofLastPost - postsPerPage;\n    const currentPosts = postList.slice(indexofFirstPost, indexofLastPost);\n\n    const content = currentPosts.map((post) => {\n        return (\n            <div className=\"row\" key={post._id}>\n                <div className=\"col l4 offset-l4 s12\">\n                    <PostCard postItem={post} />\n                </div>\n            </div>\n        )\n    })\n    // const rows = [...Array(Math.ceil(postList.length / 5))];\n    // const postRows = rows.map((row, idx) => postList.slice(idx * 4, idx * 4 + 4));\n    // const content = postRows.map((row, idx) => (\n    //     <div className=\"row\" style={{ textAlign: 'center' }} key={idx}>\n    //         {row.map((post) => {\n    //             return (\n    //                 <div className=\"col s2\" >\n    //                     <PostCard postItem={post} />\n    //                 </div>\n    //             );\n    //         })}\n    //     </div>)\n    // );\n\n    const pageCount = Math.ceil(postList.length / postsPerPage);\n\n    return (\n        <div className=\"container-fluid\">\n\n            <div className=\"row\" style={{ textAlign: 'center' }}>\n                <h1>These are the posts</h1>\n            </div>\n            {content}\n            <div className=\"App\">\n                <ReactPaginate\n                    previousLabel={\"Previous\"}\n                    nextLabel={\"Next\"}\n                    pageCount={pageCount}\n                    onPageChange={paginate}\n                    containerClassName={\"paginationBttns\"}\n                    previousLinkClassName={\"previousBttn\"}\n                    nextLinkClassName={\"nextBttn\"}\n                    disabledClassName={\"paginationDisabled\"}\n                    activeClassName={\"paginationActive\"}\n                />\n            </div>\n        </div >\n\n\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\n\n\nconst PostDetail = () => {\n\n    const history = useHistory();\n    const location = useLocation()\n    const { postedBy, title, content } = location.state\n\n\n    return (\n        <div className=\"row\" style={{ marginTop: \"10rem\", textAlign: \"center\" }}>\n            <div className=\"col l4 offset-l4 s12\">\n                <div className=\"card blue-grey darken-1\" style={{ width: \"100%\" }}>\n                    <div className=\"card-content white-text\">\n                        <span style={{ color: 'black', fontSize: \"2rem\" }} className=\"card-title\">{postedBy.toUpperCase()}</span>\n                        <div>\n                            <h2 style={{ color: 'white' }}>{title}</h2>\n                        </div>\n                        <div>\n                            <p>{content}</p>\n                        </div>\n                        <button style={{ marginTop: \"3rem\" }} type='submit' value=\"Register\" className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\" onClick={() => (history.goBack())}>GO BACK</button>\n\n                    </div>\n\n                </div >\n            </div>\n        </div>\n    );\n}\n\n\nexport default PostDetail","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport M from \"materialize-css\";\n\n\nconst CreatePost = () => {\n    const history = useHistory();\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const createPost = async () => {\n        setLoading(true);\n\n        const res = await fetch(\"https://twimbit-api.herokuapp.com/api/post/createPost\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n            body: JSON.stringify({\n                title: title,\n                content: content,\n            }),\n        });\n\n        if (res.status === 200) {\n            history.goBack();\n            setLoading(false);\n        } else {\n            setLoading(false);\n            M.toast({ html: \"Some Error Occured\", classes: \"#c62828 red darken-3\" });\n        }\n    }\n\n\n\n    if (loading) {\n        return (\n            <div className=\"loader\" style={{\n                position: \"absolute\",\n                bottom: \"50%\",\n                right: \" 50%\"\n            }}>\n                <div className=\"preloader-wrapper small active\">\n                    <div className=\"spinner-layer spinner-green-only\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"container\" id=\"login__container\">\n            <div className=\"row\" style={{ textAlign: 'center', marginTop: \"8rem\" }}>\n                <h1>Create Post !!</h1>\n            </div>\n            <form onSubmit={(e) => { e.preventDefault(); createPost() }}>\n                <div className=\"row input__field\">\n                    <div className=\"input-field col s12 l6 offset-l3\" >\n                        <i className=\"material-icons prefix\">local_bar</i>\n                        <input required=\"true\" placeholder=\"Title\" id=\"icon_prefix\" type=\"text\" className=\"validate\" value={title} onChange={(e) => { setTitle(e.target.value) }} />\n\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field col col s12 l6 offset-l3\" >\n                        <i className=\"material-icons prefix\">lightbulb_outline</i>\n                        <textarea rows=\"4\" cols=\"50\" style={{ padding: '1rem' }} required=\"true\" placeholder=\"Content\" id=\"icon_telephone\" type=\"text\" className=\"validate\" value={content} onChange={(e) => { setContent(e.target.value) }} />\n\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col s6 offset-s3\" style={{ textAlign: 'center' }}>\n                        <input type=\"submit\" value=\"Create\" className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\" />\n                    </div>\n                </div>\n\n            </form>\n        </div>\n\n\n    );\n}\n\nexport default CreatePost","import './App.css';\nimport React, { useReducer, useEffect, createContext, useState, useContext } from 'react';\nimport { BrowserRouter as Router, Route, Switch, useHistory } from 'react-router-dom';\nimport { reducer } from './reducers/userReducer';\nimport NavBar from './components/NavBarComponent/NavBarComponent';\nimport Register from './components/AuthComponents/RegisterComponent';\nimport Login from './components/AuthComponents/LoginComponent';\nimport Home from './components/HomeComponent/HomeComponent';\nimport PostDetail from './components/HomeComponent/PostDetail.jsx';\nimport CreatePost from './components/HomeComponent/CreatePost.jsx';\n\nexport const NavBarContext = createContext();\nexport const UserContext = createContext();\n\nconst Routing = ({ callBack }) => {\n    const history = useHistory()\n    const { state, dispatch } = useContext(UserContext);\n\n    useEffect(() => {\n        const user = JSON.parse(localStorage.getItem(\"user\"))\n        if (user) {\n            dispatch({ type: \"USER\", payload: user })\n            callBack(user);\n            history.push('/')\n        } else {\n            history.push('/login')\n        }\n    }, [])\n\n    return (\n        <Switch>\n            <Route path=\"/createPost\">\n                <CreatePost />\n            </Route>\n            <Route path=\"/postDetails\">\n                <PostDetail />\n            </Route>\n            <Route path=\"/register\">\n                <Register callBack={callBack} />\n            </Route>\n            <Route path=\"/login\">\n                <Login callBack={callBack} />\n            </Route>\n            <Route path=\"/\">\n                <Home />\n            </Route>\n\n        </Switch>\n    );\n};\n\nfunction App() {\n    const [type, navBarState] = useState({ page: 'login', userData: null });\n    const [state, dispatch] = useReducer(reducer, null);\n\n    function changeNavState(user) {\n        dispatch({ type: \"USER\", payload: user })\n        if (user) {\n            navBarState({ page: 'logedIn', userData: user })\n        } else {\n            navBarState({ page: 'login' });\n        }\n\n    }\n\n    return (\n        <Router>\n            <NavBarContext.Provider value={[type, navBarState]}>\n                <NavBar />\n            </NavBarContext.Provider>\n            <UserContext.Provider value={{ state, dispatch }}>\n                <Routing callBack={changeNavState} />\n            </UserContext.Provider>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}