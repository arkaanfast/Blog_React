[{"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/index.js":"1","/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/App.js":"2","/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/reportWebVitals.js":"3","/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/NavBarComponent/NavBarComponent.jsx":"4","/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/AuthComponents/RegisterComponent.jsx":"5","/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/AuthComponents/LoginComponent.jsx":"6","/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/HomeComponent/HomeComponent.jsx":"7","/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/reducers/userReducer.js":"8","/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/HomeComponent/PostCards.jsx":"9","/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/HomeComponent/PostDetail.jsx":"10","/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/HomeComponent/CreatePost.jsx":"11"},{"size":500,"mtime":1632931762008,"results":"12","hashOfConfig":"13"},{"size":2440,"mtime":1633010832975,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1632931762008,"results":"15","hashOfConfig":"13"},{"size":2322,"mtime":1633006785345,"results":"16","hashOfConfig":"13"},{"size":4996,"mtime":1632986992535,"results":"17","hashOfConfig":"13"},{"size":3269,"mtime":1632994933206,"results":"18","hashOfConfig":"13"},{"size":4525,"mtime":1633017933652,"results":"19","hashOfConfig":"13"},{"size":193,"mtime":1632988578449,"results":"20","hashOfConfig":"13"},{"size":5676,"mtime":1633017881814,"results":"21","hashOfConfig":"13"},{"size":1238,"mtime":1633018089393,"results":"22","hashOfConfig":"13"},{"size":3496,"mtime":1633009171185,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"13aki0s",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/index.js",[],["49","50"],"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/App.js",["51","52"],"import './App.css';\nimport React, { useReducer, useEffect, createContext, useState, useContext } from 'react';\nimport { BrowserRouter as Router, Route, Switch, useHistory } from 'react-router-dom';\nimport { reducer } from './reducers/userReducer';\nimport NavBar from './components/NavBarComponent/NavBarComponent';\nimport Register from './components/AuthComponents/RegisterComponent';\nimport Login from './components/AuthComponents/LoginComponent';\nimport Home from './components/HomeComponent/HomeComponent';\nimport PostDetail from './components/HomeComponent/PostDetail.jsx';\nimport CreatePost from './components/HomeComponent/CreatePost.jsx';\n\nexport const NavBarContext = createContext();\nexport const UserContext = createContext();\n\nconst Routing = ({ callBack }) => {\n    const history = useHistory()\n    const { state, dispatch } = useContext(UserContext);\n\n    useEffect(() => {\n        const user = JSON.parse(localStorage.getItem(\"user\"))\n        if (user) {\n            dispatch({ type: \"USER\", payload: user })\n            callBack(user);\n            history.push('/')\n        } else {\n            history.push('/login')\n        }\n    }, [])\n\n    return (\n        <Switch>\n            <Route path=\"/createPost\">\n                <CreatePost />\n            </Route>\n            <Route path=\"/postDetails\">\n                <PostDetail />\n            </Route>\n            <Route path=\"/register\">\n                <Register callBack={callBack} />\n            </Route>\n            <Route path=\"/login\">\n                <Login callBack={callBack} />\n            </Route>\n            <Route path=\"/\">\n                <Home />\n            </Route>\n\n        </Switch>\n    );\n};\n\nfunction App() {\n    const [type, navBarState] = useState({ page: 'login', userData: null });\n    const [state, dispatch] = useReducer(reducer, null);\n\n    function changeNavState(user) {\n        dispatch({ type: \"USER\", payload: user })\n        if (user) {\n            navBarState({ page: 'logedIn', userData: user })\n        } else {\n            navBarState({ page: 'login' });\n        }\n\n    }\n\n    return (\n        <Router>\n            <NavBarContext.Provider value={[type, navBarState]}>\n                <NavBar />\n            </NavBarContext.Provider>\n            <UserContext.Provider value={{ state, dispatch }}>\n                <Routing callBack={changeNavState} />\n            </UserContext.Provider>\n        </Router>\n    );\n}\n\nexport default App;\n","/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/reportWebVitals.js",[],"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/NavBarComponent/NavBarComponent.jsx",[],"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/AuthComponents/RegisterComponent.jsx",[],"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/AuthComponents/LoginComponent.jsx",["53"],"import React, { useState, useContext } from \"react\";\nimport { UserContext } from '../../App';\nimport { useHistory } from 'react-router-dom';\nimport M from \"materialize-css\";\n\n\nconst Login = ({ callBack }) => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(UserContext);\n  const [email, emailState] = useState('');\n  const [password, passwordState] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleLogin = async () => {\n    setLoading(true);\n    const res = await fetch(\"https://twimbit-api.herokuapp.com/api/auth/login\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        password,\n        email,\n      }),\n    });\n    const data = await res.json();\n    if (res.status === 200) {\n      localStorage.setItem('jwt', data.token)\n      localStorage.setItem('user', JSON.stringify(data.user))\n      dispatch({ type: \"USER\", payload: data.user })\n      callBack(data.user);\n      history.push('/');\n      M.toast({ html: \"Successfully Loged In\", classes: \"#c62828 red darken-3\" });\n    } else if (res.status === 500) {\n      M.toast({ html: data.message, classes: \"#c62828 red darken-3\" });\n      emailState('');\n      passwordState('');\n      setLoading(false);\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"loader\" style={{\n        position: \"absolute\",\n        bottom: \"50%\",\n        right: \" 50%\"\n      }}>\n        <div className=\"preloader-wrapper small active\">\n          <div className=\"spinner-layer spinner-green-only\">\n            <div className=\"circle-clipper left\">\n              <div className=\"circle\"></div>\n            </div>\n            <div className=\"gap-patch\">\n              <div className=\"circle\"></div>\n            </div>\n            <div className=\"circle-clipper right\">\n              <div className=\"circle\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"container\" id=\"login__container\">\n      <div className=\"row\" style={{ textAlign: 'center', marginTop: \"8rem\" }}>\n        <h1>Welcome !!</h1>\n      </div>\n      <form onSubmit={(e) => { e.preventDefault(); handleLogin() }}>\n        <div className=\"row input__field\">\n          <div className=\"input-field col s12 l6 offset-l3\" >\n            <i className=\"material-icons prefix\">email</i>\n            <input required=\"true\" placeholder=\"Email\" id=\"icon_prefix\" type=\"email\" className=\"validate\" value={email} onChange={(e) => { emailState(e.target.value) }} />\n\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field col col s12 l6 offset-l3\" >\n            <i className=\"material-icons prefix\">account_circle</i>\n            <input required=\"true\" placeholder=\"Password\" id=\"icon_telephone\" type=\"password\" className=\"validate\" value={password} onChange={(e) => { passwordState(e.target.value) }} />\n\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col s6 offset-s3\" style={{ textAlign: 'center' }}>\n            <input type=\"submit\" value=\"Login\" className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\" />\n          </div>\n        </div>\n\n      </form>\n    </div>\n\n\n  );\n}\n\nexport default Login;","/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/HomeComponent/HomeComponent.jsx",["54","55"],"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/reducers/userReducer.js",[],"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/HomeComponent/PostCards.jsx",["56"],"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/HomeComponent/PostDetail.jsx",[],"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/HomeComponent/CreatePost.jsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":17,"column":13,"nodeType":"63","messageId":"64","endLine":17,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":28,"column":8,"nodeType":"67","endLine":28,"endColumn":10,"suggestions":"68"},{"ruleId":"61","severity":1,"message":"62","line":9,"column":11,"nodeType":"63","messageId":"64","endLine":9,"endColumn":16},{"ruleId":"61","severity":1,"message":"62","line":10,"column":13,"nodeType":"63","messageId":"64","endLine":10,"endColumn":18},{"ruleId":"61","severity":1,"message":"69","line":10,"column":20,"nodeType":"63","messageId":"64","endLine":10,"endColumn":28},{"ruleId":"61","severity":1,"message":"69","line":9,"column":20,"nodeType":"63","messageId":"64","endLine":9,"endColumn":28},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callBack', 'dispatch', and 'history'. Either include them or remove the dependency array. If 'callBack' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["72"],"'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [callBack, dispatch, history]",{"range":"75","text":"76"},[1150,1152],"[callBack, dispatch, history]"]