{"ast":null,"code":"var _jsxFileName = \"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/HomeComponent/PostCards.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../../App\";\nimport M from \"materialize-css\";\nimport ReadMoreReact from 'read-more-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  postItem\n}) => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const [likeCount, setCount] = useState(postItem.likes.length);\n  const [liked, setLikedState] = useState(postItem.likes.includes(state._id));\n  const [commentList, setCommentList] = useState(postItem.comments);\n  const [comment, setComment] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const likePost = async () => {\n    setCount(likeCount + 1);\n    setLikedState(true);\n    const res = await fetch(\"https://twimbit-api.herokuapp.com/api/post/likePost\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: postItem._id\n      })\n    });\n\n    if (res.status === 200) {} else {\n      M.toast({\n        html: \"Some Error Occured\",\n        classes: \"#c62828 red darken-3\"\n      });\n    }\n  };\n\n  const unlikePost = async () => {\n    setCount(likeCount - 1);\n    setLikedState(false);\n    const res = await fetch(\"https://twimbit-api.herokuapp.com/api/post/unlikePost\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: postItem._id\n      })\n    });\n\n    if (res.status === 200) {} else {\n      M.toast({\n        html: \"Some Error Occured\",\n        classes: \"#c62828 red darken-3\"\n      });\n    }\n  };\n\n  const postComment = async () => {\n    setLoading(true);\n    setComment('');\n    const res = await fetch(\"https://twimbit-api.herokuapp.com/api/post/commentPost\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: postItem._id,\n        text: comment\n      })\n    });\n    const data = await res.json();\n\n    if (res.status === 201) {\n      console.log(data);\n      const newList = commentList.concat(data);\n      console.log(newList);\n      setCommentList(newList);\n      setLoading(false);\n    } else {\n      M.toast({\n        html: \"Some Error Occured\",\n        classes: \"#c62828 red darken-3\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card grey darken-1\",\n    style: {\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content white-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'black',\n          fontSize: \"2.5rem\",\n          fontWeight: 'normal'\n        },\n        className: \"card-title\",\n        children: [\"Posted By:- \", postItem.postedBy.name.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: 'white'\n          },\n          children: postItem.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: \"/postDetails\",\n          state: {\n            postedBy: postItem.postedBy.name,\n            title: postItem.title,\n            content: postItem.content\n          }\n        },\n        style: {\n          color: \"black\",\n          fontSize: \"2rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ReadMoreReact, {\n          text: postItem.content,\n          min: 30,\n          ideal: 30,\n          max: 30,\n          readMoreText: \"Know More..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 197\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"1rem\",\n          display: \"flex\"\n        },\n        children: [liked ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons\",\n          onClick: () => {\n            unlikePost();\n          },\n          children: \"thumb_up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons\",\n          onClick: () => {\n            likePost();\n          },\n          children: \"thumb_down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [likeCount, \" likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            color: 'white'\n          },\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), commentList.map((comment, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            style: {\n              color: '#1F51FF'\n            },\n            children: comment.postedBy.name.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'black',\n              padding: '0px'\n            },\n            children: [\" \", comment.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this);\n      }), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        style: {\n          position: \"absolute\",\n          bottom: \"50%\",\n          right: \" 50%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preloader-wrapper small active\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-layer spinner-green-only\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"circle-clipper left\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gap-patch\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"circle-clipper right\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '2rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            postComment();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: comment,\n            onChange: e => {\n              setComment(e.target.value);\n            },\n            placeholder: \"Add a Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Comment\",\n            className: \"btn waves-effect waves-light #64b5f6 blue lighten-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, postItem._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostCard, \"xLkc0Y3gBWsruRBuYIogdu5SQZ4=\");\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/HomeComponent/PostCards.jsx"],"names":["React","useContext","useState","Link","UserContext","M","ReadMoreReact","PostCard","postItem","state","dispatch","likeCount","setCount","likes","length","liked","setLikedState","includes","_id","commentList","setCommentList","comments","comment","setComment","loading","setLoading","likePost","res","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","postId","status","toast","html","classes","unlikePost","postComment","text","data","json","console","log","newList","concat","width","color","fontSize","fontWeight","postedBy","name","toUpperCase","title","pathname","content","marginTop","display","map","i","padding","position","bottom","right","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../../App\";\nimport M from \"materialize-css\";\nimport ReadMoreReact from 'read-more-react';\n\n\nconst PostCard = ({ postItem }) => {\n\n    const { state, dispatch } = useContext(UserContext);\n    const [likeCount, setCount] = useState(postItem.likes.length);\n    const [liked, setLikedState] = useState(postItem.likes.includes(state._id));\n    const [commentList, setCommentList] = useState(postItem.comments);\n    const [comment, setComment] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n\n    const likePost = async () => {\n        setCount(likeCount + 1);\n        setLikedState(true);\n        const res = await fetch(\"https://twimbit-api.herokuapp.com/api/post/likePost\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n            body: JSON.stringify({\n                postId: postItem._id,\n            }),\n        });\n        if (res.status === 200) {\n\n        } else {\n            M.toast({ html: \"Some Error Occured\", classes: \"#c62828 red darken-3\" });\n        }\n\n    }\n\n    const unlikePost = async () => {\n        setCount(likeCount - 1);\n        setLikedState(false);\n        const res = await fetch(\"https://twimbit-api.herokuapp.com/api/post/unlikePost\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n            body: JSON.stringify({\n                postId: postItem._id,\n            }),\n        });\n\n        if (res.status === 200) {\n\n        } else {\n            M.toast({ html: \"Some Error Occured\", classes: \"#c62828 red darken-3\" });\n        }\n\n    }\n\n    const postComment = async () => {\n        setLoading(true);\n        setComment('');\n        const res = await fetch(\"https://twimbit-api.herokuapp.com/api/post/commentPost\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n            body: JSON.stringify({\n                postId: postItem._id,\n                text: comment,\n            }),\n        });\n        const data = await res.json();\n        if (res.status === 201) {\n            console.log(data);\n            const newList = commentList.concat(data);\n            console.log(newList);\n\n            setCommentList(newList);\n            setLoading(false);\n        } else {\n            M.toast({ html: \"Some Error Occured\", classes: \"#c62828 red darken-3\" });\n        }\n    }\n\n\n\n    return (\n        <div className=\"card grey darken-1\" style={{ width: \"100%\" }} key={postItem._id}>\n            <div className=\"card-content white-text\">\n                <span style={{ color: 'black', fontSize: \"2.5rem\", fontWeight: 'normal' }} className=\"card-title\">Posted By:- {postItem.postedBy.name.toUpperCase()}</span>\n                <div>\n                    <h2 style={{ color: 'white' }}>{postItem.title}</h2>\n                </div>\n                <Link to={{ pathname: \"/postDetails\", state: { postedBy: postItem.postedBy.name, title: postItem.title, content: postItem.content } }} style={{ color: \"black\", fontSize: \"2rem\" }}><ReadMoreReact text={postItem.content}\n                    min={30}\n                    ideal={30}\n                    max={30}\n                    readMoreText=\"Know More..\" /></Link>\n\n                <div style={{ marginTop: \"1rem\", display: \"flex\" }} >\n                    {liked ?\n                        (<i className=\"material-icons\" onClick={() => { unlikePost() }}>thumb_up</i>)\n                        :\n                        (<i className=\"material-icons\" onClick={() => { likePost() }}>thumb_down</i>)\n                    }\n                    <span><h6>{likeCount} likes</h6></span>\n                </div>\n\n                <div>\n                    <h5 style={{ color: 'white' }}>Comments</h5>\n                </div>\n\n                {commentList.map((comment, i) => {\n                    return (<div key={i}>\n                        <h6 style={{ color: '#1F51FF' }}>{comment.postedBy.name.toUpperCase()}</h6>\n                        <p style={{ color: 'black', padding: '0px' }}> {comment.text}</p>\n                        <hr />\n                    </div>)\n                })}\n                {loading ? <div className=\"loader\" style={{ position: \"absolute\", bottom: \"50%\", right: \" 50%\" }}>\n                    <div className=\"preloader-wrapper small active\">\n                        <div className=\"spinner-layer spinner-green-only\">\n                            <div className=\"circle-clipper left\">\n                                <div className=\"circle\"></div>\n                            </div>\n                            <div className=\"gap-patch\">\n                                <div className=\"circle\"></div>\n                            </div>\n                            <div className=\"circle-clipper right\">\n                                <div className=\"circle\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div> : <div>\n                </div>}\n                <div style={{ marginTop: '2rem' }}>\n                    <form onSubmit={(e) => { e.preventDefault(); postComment() }}>\n                        <input type=\"text\" value={comment} onChange={(e) => { setComment(e.target.value) }} placeholder=\"Add a Comment\" />\n                        <input type=\"submit\" value=\"Comment\" className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\" />\n                    </form>\n                </div>\n            </div>\n\n        </div >\n    );\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}