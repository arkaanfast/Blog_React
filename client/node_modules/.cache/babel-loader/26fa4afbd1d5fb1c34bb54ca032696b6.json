{"ast":null,"code":"import _regeneratorRuntime from\"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from\"react\";import{UserContext}from'../../App';import PostCard from'./PostCards';import ReactPaginate from\"react-paginate\";// import Pagination from '../PaginationComponent/PaginationComponent';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var start=0;var Home=function Home(){var _useContext=useContext(UserContext),state=_useContext.state,dispatch=_useContext.dispatch;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),postList=_useState2[0],setPostList=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),currentPage=_useState6[0],setCurrentPage=_useState6[1];var _useState7=useState(10),_useState8=_slicedToArray(_useState7,1),postsPerPage=_useState8[0];useEffect(function(){return getPosts();},[]);var getPosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);_context.next=3;return fetch(\"https://twimbit-api.herokuapp.com/api/post/allPosts?start=\".concat(start),{headers:{Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")}});case 3:res=_context.sent;_context.next=6;return res.json();case 6:data=_context.sent;if(res.status===201){setPostList(data);setLoading(false);}else{setPostList([]);}case 8:case\"end\":return _context.stop();}}},_callee);}));return function getPosts(){return _ref.apply(this,arguments);};}();var paginate=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2){var selected;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:selected=_ref2.selected;setCurrentPage(selected);// start += 10;\n// setLoading(true);\n// console.log(localStorage.getItem(\"jwt\"));\n// const res = await fetch(`https://twimbit-api.herokuapp.com/api/post/allPosts?start=${start}`, {\n//     headers: {\n//         Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n//     },\n// });\n// const data = await res.json();\n// if (res.status === 201) {\n//     setPostList(postList.concat(data.posts));\n//     setLoading(false);\n// } else {\n//     setPostList([]);\n// }\ncase 2:case\"end\":return _context2.stop();}}},_callee2);}));return function paginate(_x){return _ref3.apply(this,arguments);};}();if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loader\",style:{position:\"absolute\",bottom:\"50%\",right:\" 50%\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"preloader-wrapper small active\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"spinner-layer spinner-green-only\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"circle-clipper left\",children:/*#__PURE__*/_jsx(\"div\",{className:\"circle\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"gap-patch\",children:/*#__PURE__*/_jsx(\"div\",{className:\"circle\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"circle-clipper right\",children:/*#__PURE__*/_jsx(\"div\",{className:\"circle\"})})]})})});}var indexofLastPost=(currentPage+1)*postsPerPage;var indexofFirstPost=indexofLastPost-postsPerPage;var currentPosts=postList.slice(indexofFirstPost,indexofLastPost);var content=currentPosts.map(function(post){return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col l4 offset-l4 s12\",children:/*#__PURE__*/_jsx(PostCard,{postItem:post})})},post._id);});// const rows = [...Array(Math.ceil(postList.length / 5))];\n// const postRows = rows.map((row, idx) => postList.slice(idx * 4, idx * 4 + 4));\n// const content = postRows.map((row, idx) => (\n//     <div className=\"row\" style={{ textAlign: 'center' }} key={idx}>\n//         {row.map((post) => {\n//             return (\n//                 <div className=\"col s2\" >\n//                     <PostCard postItem={post} />\n//                 </div>\n//             );\n//         })}\n//     </div>)\n// );\nvar pageCount=Math.ceil(postList.length/postsPerPage);return/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",style:{textAlign:'center'},children:/*#__PURE__*/_jsx(\"h1\",{children:\"These are the posts\"})}),content,/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(ReactPaginate,{previousLabel:\"Previous\",nextLabel:\"Next\",pageCount:pageCount,onPageChange:paginate,containerClassName:\"paginationBttns\",previousLinkClassName:\"previousBttn\",nextLinkClassName:\"nextBttn\",disabledClassName:\"paginationDisabled\",activeClassName:\"paginationActive\"})})]});};export default Home;","map":{"version":3,"sources":["/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/HomeComponent/HomeComponent.jsx"],"names":["React","useState","useEffect","useContext","UserContext","PostCard","ReactPaginate","start","Home","state","dispatch","postList","setPostList","loading","setLoading","currentPage","setCurrentPage","postsPerPage","getPosts","fetch","headers","Authorization","localStorage","getItem","res","json","data","status","paginate","selected","position","bottom","right","indexofLastPost","indexofFirstPost","currentPosts","slice","content","map","post","_id","pageCount","Math","ceil","length","textAlign"],"mappings":"qfAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,OAASC,WAAT,KAA4B,WAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gBAA1B,CACA;wFAEA,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,iBACaL,UAAU,CAACC,WAAD,CADvB,CACPK,KADO,aACPA,KADO,CACAC,QADA,aACAA,QADA,eAEiBT,QAAQ,CAAC,EAAD,CAFzB,wCAERU,QAFQ,eAEEC,WAFF,8BAGeX,QAAQ,CAAC,KAAD,CAHvB,yCAGRY,OAHQ,eAGCC,UAHD,8BAIuBb,QAAQ,CAAC,CAAD,CAJ/B,yCAIRc,WAJQ,eAIKC,cAJL,8BAKQf,QAAQ,CAAC,EAAD,CALhB,yCAKRgB,YALQ,eAOff,SAAS,CAAC,iBAAMgB,CAAAA,QAAQ,EAAd,EAAD,CAAmB,EAAnB,CAAT,CAEA,GAAMA,CAAAA,QAAQ,0FAAG,gJACbJ,UAAU,CAAC,IAAD,CAAV,CADa,sBAEKK,CAAAA,KAAK,qEAA8DZ,KAA9D,EAAuE,CAC1Fa,OAAO,CAAE,CACLC,aAAa,CAAE,UAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB,CADtB,CADiF,CAAvE,CAFV,QAEPC,GAFO,qCAQMA,CAAAA,GAAG,CAACC,IAAJ,EARN,QAQPC,IARO,eASb,GAAIF,GAAG,CAACG,MAAJ,GAAe,GAAnB,CAAwB,CACpBf,WAAW,CAACc,IAAD,CAAX,CACAZ,UAAU,CAAC,KAAD,CAAV,CAEH,CAJD,IAIO,CACHF,WAAW,CAAC,EAAD,CAAX,CACH,CAfY,sDAAH,kBAARM,CAAAA,QAAQ,0CAAd,CAkBA,GAAMU,CAAAA,QAAQ,2FAAG,0JAASC,QAAT,OAASA,QAAT,CACbb,cAAc,CAACa,QAAD,CAAd,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAlBa,wDAAH,kBAARD,CAAAA,QAAQ,6CAAd,CAyBA,GAAIf,OAAJ,CAAa,CACT,mBACI,YAAK,SAAS,CAAC,QAAf,CAAwB,KAAK,CAAE,CAC3BiB,QAAQ,CAAE,UADiB,CAE3BC,MAAM,CAAE,KAFmB,CAG3BC,KAAK,CAAE,MAHoB,CAA/B,uBAKI,YAAK,SAAS,CAAC,gCAAf,uBACI,aAAK,SAAS,CAAC,kCAAf,wBACI,YAAK,SAAS,CAAC,qBAAf,uBACI,YAAK,SAAS,CAAC,QAAf,EADJ,EADJ,cAII,YAAK,SAAS,CAAC,WAAf,uBACI,YAAK,SAAS,CAAC,QAAf,EADJ,EAJJ,cAOI,YAAK,SAAS,CAAC,sBAAf,uBACI,YAAK,SAAS,CAAC,QAAf,EADJ,EAPJ,GADJ,EALJ,EADJ,CAqBH,CAED,GAAMC,CAAAA,eAAe,CAAG,CAAClB,WAAW,CAAG,CAAf,EAAoBE,YAA5C,CACA,GAAMiB,CAAAA,gBAAgB,CAAGD,eAAe,CAAGhB,YAA3C,CACA,GAAMkB,CAAAA,YAAY,CAAGxB,QAAQ,CAACyB,KAAT,CAAeF,gBAAf,CAAiCD,eAAjC,CAArB,CAEA,GAAMI,CAAAA,OAAO,CAAGF,YAAY,CAACG,GAAb,CAAiB,SAACC,IAAD,CAAU,CACvC,mBACI,YAAK,SAAS,CAAC,KAAf,uBACI,YAAK,SAAS,CAAC,sBAAf,uBACI,KAAC,QAAD,EAAU,QAAQ,CAAEA,IAApB,EADJ,EADJ,EAA0BA,IAAI,CAACC,GAA/B,CADJ,CAOH,CARe,CAAhB,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,SAAS,CAAGC,IAAI,CAACC,IAAL,CAAUhC,QAAQ,CAACiC,MAAT,CAAkB3B,YAA5B,CAAlB,CAEA,mBACI,aAAK,SAAS,CAAC,iBAAf,wBAEI,YAAK,SAAS,CAAC,KAAf,CAAqB,KAAK,CAAE,CAAE4B,SAAS,CAAE,QAAb,CAA5B,uBACI,2CADJ,EAFJ,CAKKR,OALL,cAMI,YAAK,SAAS,CAAC,KAAf,uBACI,KAAC,aAAD,EACI,aAAa,CAAE,UADnB,CAEI,SAAS,CAAE,MAFf,CAGI,SAAS,CAAEI,SAHf,CAII,YAAY,CAAEb,QAJlB,CAKI,kBAAkB,CAAE,iBALxB,CAMI,qBAAqB,CAAE,cAN3B,CAOI,iBAAiB,CAAE,UAPvB,CAQI,iBAAiB,CAAE,oBARvB,CASI,eAAe,CAAE,kBATrB,EADJ,EANJ,GADJ,CAwBH,CAjID,CAmIA,cAAepB,CAAAA,IAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from '../../App';\nimport PostCard from './PostCards';\nimport ReactPaginate from \"react-paginate\";\n// import Pagination from '../PaginationComponent/PaginationComponent';\n\nlet start = 0;\n\nconst Home = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const [postList, setPostList] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(0);\n    const [postsPerPage] = useState(10);\n\n    useEffect(() => getPosts(), []);\n\n    const getPosts = async () => {\n        setLoading(true);\n        const res = await fetch(`https://twimbit-api.herokuapp.com/api/post/allPosts?start=${start}`, {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n        });\n\n        const data = await res.json();\n        if (res.status === 201) {\n            setPostList(data);\n            setLoading(false);\n\n        } else {\n            setPostList([]);\n        }\n    }\n\n    const paginate = async ({ selected }) => {\n        setCurrentPage(selected);\n        // start += 10;\n        // setLoading(true);\n        // console.log(localStorage.getItem(\"jwt\"));\n        // const res = await fetch(`https://twimbit-api.herokuapp.com/api/post/allPosts?start=${start}`, {\n        //     headers: {\n        //         Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        //     },\n        // });\n\n        // const data = await res.json();\n        // if (res.status === 201) {\n        //     setPostList(postList.concat(data.posts));\n        //     setLoading(false);\n\n        // } else {\n        //     setPostList([]);\n        // }\n\n\n    }\n\n\n\n    if (loading) {\n        return (\n            <div className=\"loader\" style={{\n                position: \"absolute\",\n                bottom: \"50%\",\n                right: \" 50%\"\n            }}>\n                <div className=\"preloader-wrapper small active\">\n                    <div className=\"spinner-layer spinner-green-only\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const indexofLastPost = (currentPage + 1) * postsPerPage;\n    const indexofFirstPost = indexofLastPost - postsPerPage;\n    const currentPosts = postList.slice(indexofFirstPost, indexofLastPost);\n\n    const content = currentPosts.map((post) => {\n        return (\n            <div className=\"row\" key={post._id}>\n                <div className=\"col l4 offset-l4 s12\">\n                    <PostCard postItem={post} />\n                </div>\n            </div>\n        )\n    })\n    // const rows = [...Array(Math.ceil(postList.length / 5))];\n    // const postRows = rows.map((row, idx) => postList.slice(idx * 4, idx * 4 + 4));\n    // const content = postRows.map((row, idx) => (\n    //     <div className=\"row\" style={{ textAlign: 'center' }} key={idx}>\n    //         {row.map((post) => {\n    //             return (\n    //                 <div className=\"col s2\" >\n    //                     <PostCard postItem={post} />\n    //                 </div>\n    //             );\n    //         })}\n    //     </div>)\n    // );\n\n    const pageCount = Math.ceil(postList.length / postsPerPage);\n\n    return (\n        <div className=\"container-fluid\">\n\n            <div className=\"row\" style={{ textAlign: 'center' }}>\n                <h1>These are the posts</h1>\n            </div>\n            {content}\n            <div className=\"App\">\n                <ReactPaginate\n                    previousLabel={\"Previous\"}\n                    nextLabel={\"Next\"}\n                    pageCount={pageCount}\n                    onPageChange={paginate}\n                    containerClassName={\"paginationBttns\"}\n                    previousLinkClassName={\"previousBttn\"}\n                    nextLinkClassName={\"nextBttn\"}\n                    disabledClassName={\"paginationDisabled\"}\n                    activeClassName={\"paginationActive\"}\n                />\n            </div>\n        </div >\n\n\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}