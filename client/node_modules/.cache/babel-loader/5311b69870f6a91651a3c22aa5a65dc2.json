{"ast":null,"code":"var _jsxFileName = \"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/HomeComponent/HomeComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from '../../App';\nimport PostCard from './PostCards';\nimport ReactPaginate from \"react-paginate\"; // import Pagination from '../PaginationComponent/PaginationComponent';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet start = 0;\n\nconst Home = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const [postList, setPostList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [postsPerPage] = useState(10);\n  useEffect(() => getPosts(), []);\n\n  const getPosts = async () => {\n    setLoading(true);\n    const res = await fetch(`https://twimbit-api.herokuapp.com/api/post/allPosts?start=${start}`, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    });\n    const data = await res.json();\n\n    if (res.status === 201) {\n      setPostList(data);\n      setLoading(false);\n    } else {\n      setPostList([]);\n    }\n  };\n\n  const paginate = async ({\n    selected\n  }) => {\n    setCurrentPage(selected); // start += 10;\n    // setLoading(true);\n    // console.log(localStorage.getItem(\"jwt\"));\n    // const res = await fetch(`https://twimbit-api.herokuapp.com/api/post/allPosts?start=${start}`, {\n    //     headers: {\n    //         Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n    //     },\n    // });\n    // const data = await res.json();\n    // if (res.status === 201) {\n    //     setPostList(postList.concat(data.posts));\n    //     setLoading(false);\n    // } else {\n    //     setPostList([]);\n    // }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      style: {\n        position: \"absolute\",\n        bottom: \"50%\",\n        right: \" 50%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preloader-wrapper small active\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-layer spinner-green-only\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle-clipper left\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gap-patch\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle-clipper right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n  const indexofLastPost = (currentPage + 1) * postsPerPage;\n  const indexofFirstPost = indexofLastPost - postsPerPage;\n  const currentPosts = postList.slice(indexofFirstPost, indexofLastPost); // const content = currentPosts.map((post) => {\n  //     return (\n  //         <div className=\"row\" key={post._id}>\n  //             <div className=\"col s4 offset-s4\">\n  //                 <PostCard postItem={post} />\n  //             </div>\n  //         </div>\n  //     )\n  // })\n\n  const rows = [...Array(Math.ceil(postList.length / 5))];\n  const postRows = rows.map((row, idx) => postList.slice(idx * 4, idx * 4 + 4));\n  const content = postRows.map((row, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: row.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s2 offset-l4\",\n        children: /*#__PURE__*/_jsxDEV(PostCard, {\n          postItem: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this);\n    })\n  }, idx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this));\n  const pageCount = Math.ceil(postList.length / postsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"These are the posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), content, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"Previous\",\n        nextLabel: \"Next\",\n        pageCount: pageCount,\n        onPageChange: paginate,\n        containerClassName: \"paginationBttns\",\n        previousLinkClassName: \"previousBttn\",\n        nextLinkClassName: \"nextBttn\",\n        disabledClassName: \"paginationDisabled\",\n        activeClassName: \"paginationActive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"BPJMwvpsCjtB1nTuZlaFLqe4C+4=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/HomeComponent/HomeComponent.jsx"],"names":["React","useState","useEffect","useContext","UserContext","PostCard","ReactPaginate","start","Home","state","dispatch","postList","setPostList","loading","setLoading","currentPage","setCurrentPage","postsPerPage","getPosts","res","fetch","headers","Authorization","localStorage","getItem","data","json","status","paginate","selected","position","bottom","right","indexofLastPost","indexofFirstPost","currentPosts","slice","rows","Array","Math","ceil","length","postRows","map","row","idx","content","post","pageCount","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from '../../App';\nimport PostCard from './PostCards';\nimport ReactPaginate from \"react-paginate\";\n// import Pagination from '../PaginationComponent/PaginationComponent';\n\nlet start = 0;\n\nconst Home = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const [postList, setPostList] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(0);\n    const [postsPerPage] = useState(10);\n\n    useEffect(() => getPosts(), []);\n\n    const getPosts = async () => {\n        setLoading(true);\n        const res = await fetch(`https://twimbit-api.herokuapp.com/api/post/allPosts?start=${start}`, {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n        });\n\n        const data = await res.json();\n        if (res.status === 201) {\n            setPostList(data);\n            setLoading(false);\n\n        } else {\n            setPostList([]);\n        }\n    }\n\n    const paginate = async ({ selected }) => {\n        setCurrentPage(selected);\n        // start += 10;\n        // setLoading(true);\n        // console.log(localStorage.getItem(\"jwt\"));\n        // const res = await fetch(`https://twimbit-api.herokuapp.com/api/post/allPosts?start=${start}`, {\n        //     headers: {\n        //         Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        //     },\n        // });\n\n        // const data = await res.json();\n        // if (res.status === 201) {\n        //     setPostList(postList.concat(data.posts));\n        //     setLoading(false);\n\n        // } else {\n        //     setPostList([]);\n        // }\n\n\n    }\n\n\n\n    if (loading) {\n        return (\n            <div className=\"loader\" style={{\n                position: \"absolute\",\n                bottom: \"50%\",\n                right: \" 50%\"\n            }}>\n                <div className=\"preloader-wrapper small active\">\n                    <div className=\"spinner-layer spinner-green-only\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const indexofLastPost = (currentPage + 1) * postsPerPage;\n    const indexofFirstPost = indexofLastPost - postsPerPage;\n    const currentPosts = postList.slice(indexofFirstPost, indexofLastPost);\n\n    // const content = currentPosts.map((post) => {\n    //     return (\n    //         <div className=\"row\" key={post._id}>\n    //             <div className=\"col s4 offset-s4\">\n    //                 <PostCard postItem={post} />\n    //             </div>\n    //         </div>\n    //     )\n    // })\n    const rows = [...Array(Math.ceil(postList.length / 5))];\n    const postRows = rows.map((row, idx) => postList.slice(idx * 4, idx * 4 + 4));\n    const content = postRows.map((row, idx) => (\n        <div className=\"row\" key={idx}>\n            {row.map((post) => {\n                return (\n                    <div className=\"col s2 offset-l4\" >\n                        <PostCard postItem={post} />\n                    </div>\n                );\n            })}\n        </div>)\n    );\n\n    const pageCount = Math.ceil(postList.length / postsPerPage);\n\n    return (\n        <div className=\"container-fluid\">\n\n            <div className=\"row\" style={{ textAlign: 'center' }}>\n                <h1>These are the posts</h1>\n            </div>\n            {content}\n            <div className=\"App\">\n                <ReactPaginate\n                    previousLabel={\"Previous\"}\n                    nextLabel={\"Next\"}\n                    pageCount={pageCount}\n                    onPageChange={paginate}\n                    containerClassName={\"paginationBttns\"}\n                    previousLinkClassName={\"previousBttn\"}\n                    nextLinkClassName={\"nextBttn\"}\n                    disabledClassName={\"paginationDisabled\"}\n                    activeClassName={\"paginationActive\"}\n                />\n            </div>\n        </div >\n\n\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}