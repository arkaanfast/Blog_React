{"ast":null,"code":"var _jsxFileName = \"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/PaginationComponent/PaginationComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = ({\n  postsPerPage,\n  totalPosts,\n  paginate\n}) => {\n  _s();\n\n  const pageNumbers = [];\n  const [state, setState] = useState([]);\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n    setState(state.push(false));\n  }\n\n  const changeState = number => {\n    const tempArray = state;\n    tempArray[number - 1] = true;\n    setState(tempArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col s4 offset-l4\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination\",\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              \"backgoundColor\": state[number - 1] ? \"grey\" : \"white\"\n            },\n            onClick: () => {\n              changeState(number);\n              paginate(number);\n            },\n            className: \"page-link\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pagination, \"yua82o5JV2p+bdzgVd8naWBubMo=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/PaginationComponent/PaginationComponent.jsx"],"names":["React","useState","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","state","setState","i","Math","ceil","push","changeState","number","tempArray","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA;AAA5B,CAAD,KAA4C;AAAA;;AAC3D,QAAMC,WAAW,GAAG,EAApB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUP,UAAU,GAAGD,YAAvB,CAArB,EAA2DM,CAAC,EAA5D,EAAgE;AAC5DH,IAAAA,WAAW,CAACM,IAAZ,CAAiBH,CAAjB;AACAD,IAAAA,QAAQ,CAACD,KAAK,CAACK,IAAN,CAAW,KAAX,CAAD,CAAR;AACH;;AAED,QAAMC,WAAW,GAAIC,MAAD,IAAY;AAC5B,UAAMC,SAAS,GAAGR,KAAlB;AACAQ,IAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT,GAAwB,IAAxB;AACAN,IAAAA,QAAQ,CAACO,SAAD,CAAR;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACKT,WAAW,CAACU,GAAZ,CAAgBF,MAAM,iBACnB;AAAiB,UAAA,SAAS,EAAC,WAA3B;AAAA,iCACI;AAAQ,YAAA,KAAK,EAAE;AAAE,gCAAkBP,KAAK,CAACO,MAAM,GAAG,CAAV,CAAL,GAAoB,MAApB,GAA6B;AAAjD,aAAf;AAA2E,YAAA,OAAO,EAAE,MAAM;AAAED,cAAAA,WAAW,CAACC,MAAD,CAAX;AAAqBT,cAAAA,QAAQ,CAACS,MAAD,CAAR;AAAmB,aAApI;AAAsI,YAAA,SAAS,EAAC,WAAhJ;AAAA,sBACKA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ,WAASA,MAAT;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAhCD;;GAAMZ,U;;KAAAA,U;AAkCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n    const pageNumbers = [];\n    const [state, setState] = useState([]);\n\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n        pageNumbers.push(i);\n        setState(state.push(false));\n    }\n\n    const changeState = (number) => {\n        const tempArray = state;\n        tempArray[number - 1] = true;\n        setState(tempArray);\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s4 offset-l4\">\n                <ul className='pagination'>\n                    {pageNumbers.map(number => (\n                        <li key={number} className='page-item'>\n                            <button style={{ \"backgoundColor\": state[number - 1] ? \"grey\" : \"white\" }} onClick={() => { changeState(number); paginate(number); }} className='page-link'>\n                                {number}\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n\n            </div>\n\n        </div>\n    );\n};\n\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}