{"ast":null,"code":"var _jsxFileName = \"/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/HomeComponent/HomeComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from '../../App';\nimport PostCard from './PostCards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const [postList, setPostList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => getPosts(), []);\n\n  const getPosts = async () => {\n    setLoading(true);\n    console.log(localStorage.getItem(\"jwt\"));\n    const res = await fetch(\"https://twimbit-api.herokuapp.com/api/post/allPosts\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    });\n    const data = await res.json();\n    setPostList(data.posts);\n    setLoading(false);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      style: {\n        position: \"absolute\",\n        bottom: \"50%\",\n        right: \" 50%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preloader-wrapper small active\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-layer spinner-green-only\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle-clipper left\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gap-patch\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle-clipper right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  } // let content = [];\n\n\n  const rows = [...Array(Math.ceil(postList.length / 5))];\n  const postRows = rows.map((row, idx) => postList.slice(idx * 4, idx * 4 + 4));\n  const content = postRows.map((row, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: row.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s4 offset-l4\",\n        children: /*#__PURE__*/_jsxDEV(PostCard, {\n          postItem: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this);\n    })\n  }, idx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"These are the posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"qRKe61hQVC1J42pAo/Mh6asNUAY=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/arkaanfast/Desktop/Twimbit-client/twim-blog/src/components/HomeComponent/HomeComponent.jsx"],"names":["React","useState","useEffect","useContext","UserContext","PostCard","Home","state","dispatch","postList","setPostList","loading","setLoading","getPosts","console","log","localStorage","getItem","res","fetch","headers","Authorization","data","json","posts","position","bottom","right","rows","Array","Math","ceil","length","postRows","map","row","idx","slice","content","post","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from '../../App';\nimport PostCard from './PostCards';\n\n\n\nconst Home = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const [postList, setPostList] = useState([]);\n    const [loading, setLoading] = useState(false);\n    useEffect(() => getPosts(), []);\n\n    const getPosts = async () => {\n        setLoading(true);\n        console.log(localStorage.getItem(\"jwt\"));\n        const res = await fetch(\"https://twimbit-api.herokuapp.com/api/post/allPosts\", {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n        });\n\n        const data = await res.json();\n        setPostList(data.posts);\n        setLoading(false);\n    }\n\n\n\n    if (loading) {\n        return (\n            <div className=\"loader\" style={{\n                position: \"absolute\",\n                bottom: \"50%\",\n                right: \" 50%\"\n            }}>\n                <div className=\"preloader-wrapper small active\">\n                    <div className=\"spinner-layer spinner-green-only\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    // let content = [];\n    const rows = [...Array(Math.ceil(postList.length / 5))];\n    const postRows = rows.map((row, idx) => postList.slice(idx * 4, idx * 4 + 4));\n    const content = postRows.map((row, idx) => (\n        <div className=\"row\" key={idx}>\n            {row.map((post) => {\n                return (\n                    <div className=\"col s4 offset-l4\" >\n                        <PostCard postItem={post} />\n                    </div>\n                );\n            })}\n        </div>)\n    );\n\n\n\n    return (\n        <div className=\"container-fluid\">\n\n            <div className=\"row\" style={{ textAlign: 'center' }}>\n                <h1>These are the posts</h1>\n            </div>\n            {content}\n\n        </div >\n\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}